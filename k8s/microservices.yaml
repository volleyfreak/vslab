apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
    spec:
      containers:
        - image: docker.io/volleyfreak/vslab-proxy:latest
          name: apache
          ports:
            - containerPort: 80
          resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: product
  name: product
spec:
  replicas: 1
  selector:
    matchLabels:
      run: product
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: product
    spec:
      containers:
        - image: docker.io/volleyfreak/vslab-product-service:latest
          name: product
          ports:
            - containerPort: 8080
          resources: {}
          env:
            - name: MYSQL_HOST
              value: "mysql"
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: category
  name: category
spec:
  replicas: 1
  selector:
    matchLabels:
      run: category
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: category
    spec:
      containers:
        - image: docker.io/volleyfreak/vslab-category-service:latest
          name: category
          ports:
            - containerPort: 8080
          resources: {}
          env:
            - name: MYSQL_HOST
              value: "mysql"
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: product
  name: product
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: product
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: category
  name: category
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: category
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.6
          name: mysql
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS `products`;
    CREATE DATABASE IF NOT EXISTS `categories`;
    CREATE USER 'user'@'%' IDENTIFIED BY 'user';
    GRANT ALL ON *.* TO 'user'@'%';

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi